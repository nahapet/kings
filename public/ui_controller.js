class UIController{constructor(){this.socket=io(),this.canvas=document.getElementById("canvas"),this.graphicsContext=canvas.getContext("2d"),this.cards=[],this.grabbedCardID=null}begin(){const a=new Graphics(this,this.canvas,this.graphicsContext);new MouseHandler(this,a),this.socket.on("card data",this.updateCardsFromScocket.bind(this))}updateCardsFromScocket(a){this.cards=[],a.forEach(a=>{this.cards.push(new Card(a.id,a.rotation,a.x,a.y,a.freed,a.rank,a.suite))})}getCards(){return this.cards}isCardGrabbed(){return null!==this.grabbedCardID}grabCard(a){this.grabbedCardID=a.id}releaseCard(){null!=this.grabbedCardID&&this.socket.emit("card release",{id:this.grabbedCardID}),this.grabbedCardID=null}moveCard(a,b){null==this.grabbedCardID||this.socket.emit("card move",{id:this.grabbedCardID,x:a,y:b})}}"undefined"!=typeof module&&(module.exports=UIController);