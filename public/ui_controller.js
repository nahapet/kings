class UIController{constructor(){this.name=null,this.socket=io(),this.onScreenCanvas=document.getElementById("canvas"),this.offScreenCanvas=document.getElementById("canvas2"),this.slider=document.getElementById("slider"),this.onScreenCTX=this.onScreenCanvas.getContext("2d"),this.offScreenCTX=this.offScreenCanvas.getContext("2d"),this.cards=[],this.grabbedCard=null,this.players=[],this.currentPlayerIndex=null}begin(){this.graphics=new Graphics(this,this.onScreenCanvas,this.offScreenCanvas,this.onScreenCTX,this.offScreenCTX),new MouseHandler(this,this.graphics,this.slider),this.socket.on("card data",this.updateCardsFromScocket.bind(this)),this.socket.on("single card data",this.updateSingleCardFromScocket.bind(this)),this.socket.on("register name",this.updateName.bind(this)),this.socket.on("players",this.updatePlayers.bind(this)),this.socket.on("game ID error",this.showError.bind(this)),this.socket.on("card download",this.downloadCardImage.bind(this)),this.socket.on("rearrange cards",this.rearrangeCards.bind(this))}updateName(a){const{playerName:b,gameID:c}=a;this.name=b;const d=document.getElementsByTagName("body")[0];d.className="playing";const e=document.getElementById("gameID");e.innerHTML="Game ID:<span>"+c+"</span>"}updatePlayers(a){this.players=a.players,this.currentPlayerIndex=a.currentPlayerIndex;const b=document.getElementById("players");for(;b.firstChild;)b.removeChild(b.firstChild);for(let c in this.players){const a=this.players[c],d=document.createElement("div");d.innerHTML=a,a==this.name&&(d.innerHTML+=" (You)"),c==this.currentPlayerIndex&&(d.className="current"),b.appendChild(d)}}hasName(){return null!=this.name}isTurn(){return this.players.indexOf(this.name)===this.currentPlayerIndex}submitName(a,b,c){b=b.toUpperCase();this.hasName()||this.socket.emit("enter",{name:a,gameID:b,verifyGameID:c})}updateCardsFromScocket(a){this.cards=[],a.forEach(a=>{const b=Card.from(a);this.cards.push(b)})}updateSingleCardFromScocket(){}rearrangeCards(a){const{from:b,to:c}=a,d=this.cards.splice(b,1)[0];this.cards.splice(c,0,d)}showError(){const a=document.getElementsByTagName("body")[0];a.className="error"}getCards(){return this.cards}isCardGrabbed(){return null!==this.grabbedCard}grabCard(a){this.grabbedCard=a,this.socket.emit("card move",{id:a.getID(),x:0,y:0})}releaseCard(){null!=this.grabbedCard&&this.socket.emit("card release",{id:this.grabbedCard.getID()}),this.grabbedCard=null}moveCard(a,b,c,d){null==this.grabbedCard||(this.grabbedCard.x=c,this.grabbedCard.y=d,this.socket.emit("card move",{id:this.grabbedCard.getID(),x:a,y:b}))}downloadCardImage(a){const{rank:b,suite:c}=a;this.graphics.downloadCardImage(b,c)}setZoom(a){const b=Math.pow(10,a/100);this.graphics.setUserScale(b)}updateSlider(a){const b=100*Math.log10(a);this.slider.value=b}}"undefined"!=typeof module&&(module.exports=UIController);