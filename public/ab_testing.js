class ABTesting{static get EXPERIMENTS(){return{overlay:"experiment-overlay"}}constructor(){heap.clearEventProperties(),this.exposures={},this.localCache={}}randBool(){return .5>Math.random()}assignExperiment(a,b){const c=window.localStorage;let d=null;return c?(d=c.getItem(a),null==d&&(d=b(),c.setItem(a,d))):(d=this.localCache[a],null==d&&(d=b(),this.localCache[a]=d)),d=!0==d||"true"==d,heap.addEventProperties({[a]:d}),this.exposures[a]||(this.exposures[a]=!0,heap.track("Exposure: "+a)),d}shouldShowOverlay(){const a=ABTesting.EXPERIMENTS.overlay;return this.assignExperiment(a,this.randBool)}}"undefined"!=typeof module&&(module.exports=ABTesting);