class Card{static get WIDTH(){return 150}static get HEIGHT(){return 210}static get SUITES(){return["C","D","H","S"]}static get RANKS(){return["2","3","4","5","6","7","8","9","10","J","Q","K","A"]}constructor(a,b,c,d,e,f,g){this.id=a,this.rotation=b,this.x=c,this.y=d,this.freed=e,this.rank=f,this.suite=g}getID(){return this.id}getRankAndSuite(){return{rank:this.rank,suite:this.suite}}getEdges(){var e=Math.sin,f=Math.cos;Number.isInteger(2*this.rotation/Math.PI)&&(this.rotation+=.01);const g=Card.HEIGHT*f(this.rotation),a=Card.WIDTH*e(this.rotation),b=Card.WIDTH*f(this.rotation),c=Card.HEIGHT*e(this.rotation),d=this.x-(b+c)/2,h=this.y+(g-a)/2,i=this.x-(c-b)/2,j=this.y+(g+a)/2,k=this.x+(b+c)/2,l=this.y-(g-a)/2,m=this.x+(c-b)/2,n=this.y-(g+a)/2;return{slope1:a/b,slope2:g/c,p1x:d,p1y:h,p2x:i,p2y:j,p3x:k,p3y:l,p4x:m,p4y:n}}intersects(a,b){var c=Math.sign;const d=this.getEdges(),e=c(Math.sin(this.rotation)),f=c(Math.cos(this.rotation));return f*b<f*(a=>a*d.slope1-d.p1x*d.slope1+d.p1y)(a)&&e*b<e*(a=>-a*d.slope2+d.p3x*d.slope2+d.p3y)(a)&&e*b>e*(a=>-a*d.slope2+d.p1x*d.slope2+d.p1y)(a)&&f*b>f*(a=>a*d.slope1-d.p3x*d.slope1+d.p3y)(a)}distanceFromCenter(){return Math.sqrt(this.x*this.x+this.y*this.y)}draw(a,b){let c=Card.WIDTH,d=Card.HEIGHT;this.freed&&(c*=1.5,d*=1.5),a.save(),a.translate(this.x,this.y),a.rotate(this.rotation),a.translate(-c/2,-d/2),a.fillStyle="rgba(0,0,0,0.01)",a.shadowColor="rgba(0,0,0,1)",a.shadowBlur=3,a.shadowOffsetX=1,a.shadowOffsetY=1,a.fillRect(0,0,c,d),a.drawImage(b,0,0,c,d),a.restore()}}"undefined"!=typeof module&&(module.exports=Card);