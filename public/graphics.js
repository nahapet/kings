class Graphics{constructor(a,b,c){this.controller=a,this.canvas=b,this.ctx=c,this.dragX=0,this.dragY=0,this.scale=null,this.cardBackImage=null,this.tableImage=null,this.cardFaceImages={},this.loadImages(),this.drawLoop(),window.addEventListener("resize",this.onResize.bind(this))}loadImages(){this.cardBackImage=new Image,this.cardBackImage.src="images/back.png",this.tableImage=new Image,this.tableImage.src="images/stone.jpg",this.logoImage=new Image,this.logoImage.src="images/logo.png",this.rules1Image=new Image,this.rules1Image.src="images/rules1.png",this.rules2Image=new Image,this.rules2Image.src="images/rules2.png",Card.RANKS.forEach(a=>{this.cardFaceImages[a]={}})}drawLoop(){this.ctx.save(),this.clearAndResize(),this.drawCards(),this.ctx.restore(),setTimeout(this.drawLoop.bind(this),100)}onResize(){null==this.scale&&(this.scale=1.5);const a=window.innerWidth*2,b=window.innerHeight*2,c=5*(this.scale*Card.HEIGHT);if(c>a||c>b){const d=Math.min(a/c,b/c);this.scale=d*this.scale,this.controller.updateSlider(this.scale)}}clearAndResize(){const a=this.ctx,b=window.innerWidth*2,c=window.innerHeight*2;null==this.scale&&this.onResize(),this.canvas.width=b,this.canvas.height=c,this.canvas.style=`width: ${b/2}px; height: ${c/2}px`,this.drawBackground(b,c),this.translateX=b/2,this.translateY=c/2,a.translate(this.translateX,this.translateY),a.translate(this.dragX,this.dragY),a.scale(this.scale,this.scale);a.drawImage(this.logoImage,-180,-180,360,360)}drawBackground(a,b){const c=this.ctx,d=c.createPattern(this.tableImage,"repeat");if(null!=d){const c=new DOMMatrix,e=c.translateSelf(this.dragX+a/2,this.dragY+b/2,0).scaleSelf(2*this.scale,2*this.scale,1);d.setTransform(e)}c.fillStyle=d,c.fillRect(0,0,a,b)}drawCards(){const a=this.controller.getCards();for(const b in a){const c=a[b],{rank:d,suite:e}=c.getRankAndSuite();if("rules1"==c.getID())c.draw(this.ctx,this.rules1Image);else if("rules2"==c.getID())c.draw(this.ctx,this.rules2Image);else if(null==d||null==e)c.draw(this.ctx,this.cardBackImage);else{const a=this.downloadCardImage(d,e);c.draw(this.ctx,a)}}}downloadCardImage(a,b){let c=this.cardFaceImages[a][b];return null==c&&(c=new Image,this.cardFaceImages[a][b]=c,c.src=`images/cards/${a}${b}.png`),c}convertRealToVirtualX(a){return(2*a-this.translateX-this.dragX)/this.scale}convertRealToVirtualY(a){return(2*a-this.translateY-this.dragY)/this.scale}convertToVirtualScale(a){return 2*a/this.scale}dragScreen(a,b){this.dragX+=a,this.dragY+=b}setUserScale(a){this.scale=a}}"undefined"!=typeof module&&(module.exports=Graphics);